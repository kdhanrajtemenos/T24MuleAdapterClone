<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.mule.modules</groupId>
    <artifactId>t24-outbound-connector</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>mule-module</packaging>
    <name>Mule T24Outbound Anypoint Connector</name>

    <parent>
        <groupId>org.mule.tools.devkit</groupId>
        <artifactId>mule-devkit-parent</artifactId>
        <version>3.9.0</version>
    </parent>

    <properties>
        <category>Community</category>
        <licensePath>LICENSE.md</licensePath>
        <!-- Adding CXF Support -->
        
        <!-- Maven should build the update site Zip file -->
		<devkit.studio.package.skip>true</devkit.studio.package.skip>
		 
		<!--  CXF version info -->       
		<cxf.version>2.7.7</cxf.version>
		<cxf.version.boolean>2.6.0</cxf.version.boolean>
		 
		<!-- Package name, WSDL file path and location in the JAR -->
		<connector.package>
		    com.temenos.adapter.mule.T24outbound.definition
		</connector.package>
		<connector.wsdl>
		    ${basedir}/src/main/resources/wsdl/IntegrationLandscapeServiceWS.wsdl
		</connector.wsdl>
		<connector.wsdlLocation>classpath:wsdl/IntegrationLandscapeServiceWS.wsdl</connector.wsdlLocation>
    </properties>
    
    <dependencies>
    
		<!-- Adding CXF Support -->
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-cxf</artifactId>
			<version>${mule.version}</version>
			<scope>provided</scope>
		</dependency>

			
		<!-- APACHE COMMON-LANG3 - FOR THE EJB RESPONCE XML PROCCESSING -->    	
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.0</version>
        </dependency>
        
		
		<!-- TEMENOS COMMON ADDAPTER   DEV.0.0-SNAPSHOT 1.0.1-SNAPSHOT -->
        <dependency>
		      <groupId>com.temenos.technology.integrationframework</groupId>
		      <artifactId>t24-adapter-common</artifactId>
		      <version>1.0.1-SNAPSHOT</version>
		</dependency>
		    
		<!-- TEMENOS TAFJ SUPPORT  -->
		<dependency>
		      <groupId>com.temenos.tafj</groupId>
		      <artifactId>tComponentFramework</artifactId>
		      <version>17.6.0-SNAPSHOT</version>
		</dependency>
		 
		<!-- TEMENOS ORACLE SUPPORT -->
		<dependency>
		      <groupId>com.temenos.technology.integrationframework.adapters.oracle</groupId>
		      <artifactId>t24-oracle-adapter</artifactId>
		      <version>DEV.0.0-SNAPSHOT</version>
		</dependency>
		    
		<!-- THIS IS EXTRNAL LOG4J -->
		<dependency>
			<groupId>org.apache.log4j</groupId>
			<artifactId>org-apache-log4j</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		 
		<!-- JBOSS CLIENT -->   	    
		<dependency>
		      <groupId>org.jboss</groupId>
		      <artifactId>jboss-client-test</artifactId>
		      <version>1.0.0</version>
		</dependency>
		  
		<!-- TEMENOS EJB SUPPORT -->   	  
		<dependency>
		      <groupId>com.temenos.services.ofsconnector.ejb</groupId>
		      <artifactId>t24-EB_OFSConnectorService-ejb</artifactId>
		      <version>1.0.0-SANPSHOT</version>
		</dependency>
		    
		<!-- TEMENOS DATA SUPPORT -->   	  
		<dependency>
		      <groupId>com.temenos.services.ofsconnector.data</groupId>
		      <artifactId>t24-EB_OFSConnectorService-Data</artifactId>
		      <version>1.0.0</version>
		</dependency>
		   
		<!-- CONNECTOR RESOURCES -->  
		<dependency>
		      <groupId>javax.resource</groupId>
		      <artifactId>connector-api-test</artifactId>
		      <version>1.0.0</version>
		</dependency>  
		
		
		<!-- TEMENOS-OFSML-PROCCESING -->  
		<dependency>
			<groupId>temenos.tocf.ofsml</groupId>
			<artifactId>temenos-tocf-ofsml</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		
		<dependency>
			<groupId>com.temenos.tocf.common</groupId>
			<artifactId>com-temenos-tocf-common</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		
		<dependency>
			<groupId>com.temenos.tocf.propertybag</groupId>
			<artifactId>com-temenos-tocf-propertybag</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		
		
		
		<!-- TEMENOS-OFS-PROCCESING -->  
		<dependency>
			<groupId>com.temenos.t24.ofs</groupId>
			<artifactId>com-temenos-t24-ofs</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		
		<!-- XSTREAM - XML BUILDER -->
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>com-thoughtworks-xstream</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		
		<!-- JREMOTE FOR TAFC -->
		<dependency>
			<groupId>com.jbase.jremote</groupId>
			<artifactId>com-jbase-jremote</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.glassfish.jersey.bundles.repackaged/jersey-guava-->
		<dependency>
		    <groupId>org.glassfish.jersey.bundles.repackaged</groupId>
		    <artifactId>jersey-guava</artifactId>
		    <version>2.13</version>
		</dependency>
		 
	    
	    <!-- FOR JUNIT TESTING -->
	    <dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- This will get hamcrest-core automatically -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		

	    
	    
    </dependencies>
    
    <build>
	    <plugins>
	    
			<plugin>
			    <groupId>org.apache.cxf</groupId>
			    <artifactId>cxf-codegen-plugin</artifactId>
			    <version>${cxf.version}</version>
			    <executions>
			        <execution>
			            <!-- Note that validate phase is not the usual phase to
			              run WSDL2Java. This is done because DevKit requires the
			              class be generated so it can be used in generate-sources
			              phase by DevKit. The DevKit generates code from annotations
			              etc. and references the WSDL2Java generated output.  -->
			           
			            <goals>
			                <goal>wsdl2java</goal>
			            </goals>
			            <configuration>
			                <wsdlOptions>
			                    <wsdlOption>
			                        <!-- WSDL File Path -->
			                        <wsdl>${connector.wsdl}</wsdl>
			                        <!-- pick up the WSDL from within the JAR -->
			                        <wsdlLocation>${connector.wsdlLocation}</wsdlLocation> 
			                        <autoNameResolution>true</autoNameResolution>
			                        <extraargs>
			                            <!-- Package Destination -->
			                            <extraarg>-p</extraarg>
			                            <!-- Name of the output package specified
			                              that follows the -p argument to wsdl2java. -->
			                            <extraarg>
			                                ${connector.package}
			                            </extraarg>
			                                <!-- DataMapper compatibility requires that
			                                boolean getters and setters follow naming
			                                conventions for other getters and setters. -->
			                            <extraarg>-xjc-Xbg</extraarg>
			                            <extraarg>-xjc-Xcollection-setter-injector</extraarg>
			                        </extraargs>
			                    </wsdlOption>
			                </wsdlOptions>
			            </configuration>

			        </execution>
			    </executions>
			    <dependencies>
			        <!-- Boolean Getters -->
			        <dependency>
			            <groupId>org.apache.cxf.xjcplugins</groupId>
			            <artifactId>cxf-xjc-boolean</artifactId>
			            <version>${cxf.version.boolean}</version>
			        </dependency>
			        <!-- Collection Setters -->
			        <dependency>
			            <groupId>net.java.dev.vcc.thirdparty</groupId>
			            <artifactId>collection-setter-injector</artifactId>
			            <version>0.5.0-1</version>
			        </dependency>
			    </dependencies>
			</plugin>
			

			
			
	    </plugins>
		
		<!-- Adding resource folder to  look for configuration files -->
	    <resources>
		   <resource>
	        <directory>src/main/resources</directory>
	        <includes>
		          <include>**/*.prop</include>
		          <include>**/*.properties</include>
		          <include>**/*.xml</include>
		          <include>**/*.wsdl</include>
		          
		          <!-- for TESTS -->
		          <include>**/*.cfg</include>
		          <include>**/*.txt</include>
		          <include>**/*.md</include>
	        </includes>
	      </resource>
    	</resources>
    </build>
    
    <repositories>
        <repository>
            <id>mulesoft-releases</id>
            <name>MuleSoft Releases Repository</name>
            <url>http://repository.mulesoft.org/releases/</url>
            <layout>default</layout>
        </repository>
        <repository>
            <id>mulesoft-snapshots</id>
            <name>MuleSoft Snapshots Repository</name>
            <url>http://repository.mulesoft.org/snapshots/</url>
            <layout>default</layout>
        </repository>
     </repositories>
</project>
